Script started on Sat 23 Feb 2019 06:05:46 PM EST
smw42@gold32:~/CS214/labs/04/clojure$ cat src/logTable.clj
;;;; logTable.clj displays a table of logarithms.
;;;;
;;;; Input: start, stop and increment, three numbers.
;;;; Precondition: start < stop && increment > 0.
;;;; Output: A table of logarithms from start to stop,
;;;;          with interval of increment.
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by: Sarah Whitten
;;;; Date: February 23, 2019
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns logTable)                                 ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; displayLogTable() recursively generates the log-table.
;;; Receive: start the first value for the table;
;;;          stop, the last  value for the table;
;;;           step, the step value for the table;
;;; Precondition: start < stop && increment > 0.
;;; Output: The table of logs from start to stop, by step.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; direct-recursive version
(defn displayLogTable [start stop step]
    (if (<= start stop)
        (do 
            (printf "The logarithm of %f is %f\n"
                        start (Math/log10 start))
            (displayLogTable (+ start step) stop step)
        )
    )
)

;; loop (indirect-recursion) version
(defn displayLogTable2 [start stop step]
  (loop [i start]                           ; set i to start
    (when (<= i stop)                       ; if i <= stop:
      (printf "The logarithm of %f is %f\n" ;  print one line
                  i (Math/log10 i)
      )
      (recur (+ i step))                    ; recurse, i += step
    )
  )
)

;; indirect/tail-recursive version (just using recur)
(defn displayLogTable3 [start stop step]
  (if (<= start stop)                     ; if start <= stop:
    (do                                      ; do these two things:
      (printf "The logarithm of %f is %f\n"  ; - print one line
                  start (Math/log10 start)
      )
      (recur (+ start step) stop step)       ; - recurse, start+=step
    )
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; -main is a 'driver' for the displayLogTable() functions.
;;; Input: start, stop and increment.
;;; Output: The table of logarithms 
;;;          from start to stop by increment
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn -main []
 (println "To display a table of logarithms,")
 (println "enter the start, stop, and increment values: ")
 (let
    [ start (double (read))
      stop (double (read))
      step (double (read))
    ] 
    (println)
    (displayLogTable start stop step) 
    (println)
    (displayLogTable2 start stop step) 
    (println)
    (displayLogTable3 start stop step) 
    (println)
 )
)
smw42@gold32:~/CS214/labs/04/clojure$ clojure -m logTable
To display a table of logarithms,
enter the start, stop, and increment values: 
1
10
1

The logarithm of 1.000000 is 0.000000
The logarithm of 2.000000 is 0.301030
The logarithm of 3.000000 is 0.477121
The logarithm of 4.000000 is 0.602060
The logarithm of 5.000000 is 0.698970
The logarithm of 6.000000 is 0.778151
The logarithm of 7.000000 is 0.845098
The logarithm of 8.000000 is 0.903090
The logarithm of 9.000000 is 0.954243
The logarithm of 10.000000 is 1.000000

The logarithm of 1.000000 is 0.000000
The logarithm of 2.000000 is 0.301030
The logarithm of 3.000000 is 0.477121
The logarithm of 4.000000 is 0.602060
The logarithm of 5.000000 is 0.698970
The logarithm of 6.000000 is 0.778151
The logarithm of 7.000000 is 0.845098
The logarithm of 8.000000 is 0.903090
The logarithm of 9.000000 is 0.954243
The logarithm of 10.000000 is 1.000000

The logarithm of 1.000000 is 0.000000
The logarithm of 2.000000 is 0.301030
The logarithm of 3.000000 is 0.477121
The logarithm of 4.000000 is 0.602060
The logarithm of 5.000000 is 0.698970
The logarithm of 6.000000 is 0.778151
The logarithm of 7.000000 is 0.845098
The logarithm of 8.000000 is 0.903090
The logarithm of 9.000000 is 0.954243
The logarithm of 10.000000 is 1.000000

smw42@gold32:~/CS214/labs/04/clojure$ exit

Script done on Sat 23 Feb 2019 06:06:36 PM EST
